name: Update ECR Image

on:
  workflow_call:
    inputs:
      tag:
        required: true
        type: string
        default: latest
      environment:
        required: true
        type: string
        default: production
#      image_temp:
#        required: false
#        type: string
#        default: ''

    secrets:
      AWS_ECR_IAM_ARN:
        required: true
  push:
    branches:
      - main
#  pull_request:
#    branches:
#      - main
  workflow_dispatch:

env:
  AWS_REGION: us-west-2
  ECR_REPOSITORY: sweri-data-tools

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    name: Update latest ECR image
    environment: ${{ inputs.environment }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{secrets.AWS_ECR_IAM_ARN}}
          aws-region: us-west-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        with:
          mask-password: 'true'

#      - name: Download artifact
#        if: inputs.image_temp != ''
#        uses: actions/download-artifact@v4
#        with:
#          name: myimage
#          path: ${{ inputs.image_temp }}
#
#      - name: Load image
#        if: inputs.image_tar != ''
#        run: |
#          docker load --input ${{ runner.temp }}/app.tar
#          docker image ls -a

      - name: Set up Docker Build
#        if: inputs.image_temp == ''
        uses: docker/setup-buildx-action@v3

      - name: Get tags for backend image
        uses: docker/metadata-action@v5
        id: metadata
        with:
          images: ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}
          tags: |
            type=raw,value=${{ inputs.tag }}

      - name: Build and tag image
        if: inputs.image_temp == ''
        id: build-image
        uses: docker/build-push-action@v6
        with:
          file: ./docker/Dockerfile
          context: .
          load: true
          tags: ${{ inputs.tag }}
          cache-from: type=registry,ref=${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:latest

      - name: Push backend image to Amazon ECR
        id: push-image
        uses: docker/build-push-action@v6
        with:
          file: ./docker/Dockerfile
          context: .
          push: true
          tags: ${{ steps.metadata.outputs.tag }}
